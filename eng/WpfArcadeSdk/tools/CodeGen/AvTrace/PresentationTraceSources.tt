<#@ template hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="Newtonsoft.Json" #>
<#@ assembly name="Microsoft.CSharp" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="Newtonsoft.Json" #>
<#@ output extension=".cs" #>
<#@ parameter type="System.String" name="AvTraceMessageFile" #>
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// See the LICENSE file in the project root for more information.

using MS.Internal;

namespace System.Diagnostics
{
    /// <summary>Access point for TraceSources</summary>
    public static partial class PresentationTraceSources
    {
<# 
   string fileName = this.Host.ResolvePath(AvTraceMessageFile);
   string jsonText = File.ReadAllText(fileName);
   dynamic jsonObj = JsonConvert.DeserializeObject(jsonText);
   foreach (var source in jsonObj.sources)
   {
		string name = source.name; 
#>
		/// <summary><#=name#>Source for <#=name#></summary>
		public static TraceSource <#=name#>Source
		{
			get
			{
				if (_<#=name#>Source == null)
				{
					_<#=name#>Source = CreateTraceSource("<#=source.source_name#>");
				}
				return _<#=name#>Source;
			}
		}
		internal static TraceSource _<#=name#>Source;

<# } #>
	}
}